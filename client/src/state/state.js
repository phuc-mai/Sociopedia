import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  mode: "light",
  user: null,
  token: null,
  posts: [],
}

// The createSlice function creates a slice of the Redux store that automatically generates action creators and action types based on the provided reducers.
export const authSlice = createSlice({
  name: "auth",
  initialState,
  // Each reducer corresponds to a specific action and defines how the state should be updated when that action is dispatched.
  reducers: {
    setMode: (state) => {
      state.mode = state.mode === "light" ? "dark" : "light"
    }, 
    setLogin: (state, action) => {
      state.user = action.payload.user
      state.token = action.payload.token
    },
    setLogout: (state) => {
      state.user = null
      state.token = null
    },
    setFriends: (state, action) => {
      if (state.user) {
        state.user.friends = action.payload.friends
      } else {
        console.error("User friends non-existent :(")
      }
    },
    setPosts: (state, action) => {
      state.posts = action.payload.posts
    },
    setPost: (state, action) => {
      const updatedPosts = state.posts.map((post) => {
        if (post._id === action.payload.post._id) return action.payload.post
        return post
      })
      state.posts = updatedPosts
    },
  }
})

export const { setMode, setLogin, setLogout, setFriends, setPost, setPosts } = authSlice.actions
// The authSlice.actions object contains all the generated action creators. They can be imported and used to dispatch actions.

export default authSlice.reducer
// The authSlice.reducer is the reducer function automatically generated by createSlice. It handles state updates based on the dispatched actions.